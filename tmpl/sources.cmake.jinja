dplx_target_sources({{project_slug}}
    TEST_TARGET {{project_slug}}-tests
    MODE SMART_{% if header_only %}HEADER_ONLY{% else %}SOURCE{% endif %} MERGED_LAYOUT
    BASE_DIR dplx

    PUBLIC
        {{namespace}}
{%- if header_only %}
{%- if header_config %}
        {{namespace}}/config
{%- endif %}
{%- if workaround_header %}
        {{namespace}}/detail/workaround
{%- endif %}
{%- endif %}
)
{%- if not header_only and (header_config or workaround_header) %}

dplx_target_sources({{project_slug}}
    TEST_TARGET {{project_slug}}-tests
    MODE SMART_HEADER_ONLY MERGED_LAYOUT
    BASE_DIR dplx

    PUBLIC
{%- if header_config %}
        {{namespace}}/config
{%- endif %}
{%- if workaround_header %}
        {{namespace}}/detail/workaround
{%- endif %}
)
{%- endif %}
{%- if header_config %}

file(MAKE_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/generated/src/dplx/{{namespace}}/detail")
configure_file(tools/config.hpp.in "${CMAKE_CURRENT_BINARY_DIR}/generated/src/dplx/{{namespace}}/detail/config.hpp" @ONLY)
target_sources({{project_slug}} PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/generated/src/dplx/{{namespace}}/detail/config.hpp>)
{%- endif %}

if (BUILD_TESTING)
    dplx_target_sources({{project_slug}}-tests PRIVATE
        MODE VERBATIM
        BASE_DIR {{namespace}}_tests

        PRIVATE
            test_utils.hpp
    )
endif ()
